EventResults {
    input: "\nparent = { . key = \"value\" }\n",
    events: [
        Event {
            kind: Newline,
            encoding: None,
            span: 0..1,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 1..7,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 7..8,
        },
        Event {
            kind: KeyValSep,
            encoding: None,
            span: 8..9,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 9..10,
        },
        Event {
            kind: InlineTableOpen,
            encoding: None,
            span: 10..11,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 11..12,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 12..12,
        },
        Event {
            kind: KeySep,
            encoding: None,
            span: 12..13,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 13..14,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 14..17,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 17..18,
        },
        Event {
            kind: KeyValSep,
            encoding: None,
            span: 18..19,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 19..20,
        },
        Event {
            kind: Scalar,
            encoding: Some(
                BasicString,
            ),
            span: 20..27,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 27..28,
        },
        Event {
            kind: InlineTableClose,
            encoding: None,
            span: 28..29,
        },
        Event {
            kind: Newline,
            encoding: None,
            span: 29..30,
        },
    ],
    errors: [
        ParseError {
            context: Some(
                12..12,
            ),
            description: "unquoted keys cannot be empty",
            expected: Some(
                [
                    Description(
                        "letters",
                    ),
                    Description(
                        "numbers",
                    ),
                    Literal(
                        "-",
                    ),
                    Literal(
                        "_",
                    ),
                ],
            ),
            unexpected: Some(
                12..12,
            ),
        },
    ],
}
