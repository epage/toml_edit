EventResults {
    input: "[ . . ]\nkey = \"value\"\n",
    events: [
        Event {
            kind: StdTableOpen,
            encoding: None,
            span: 0..1,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 1..2,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 2..2,
        },
        Event {
            kind: KeySep,
            encoding: None,
            span: 2..3,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 3..4,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 4..4,
        },
        Event {
            kind: KeySep,
            encoding: None,
            span: 4..5,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 5..6,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 6..7,
        },
        Event {
            kind: Newline,
            encoding: None,
            span: 7..8,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 8..11,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 11..12,
        },
        Event {
            kind: KeyValSep,
            encoding: None,
            span: 12..13,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 13..14,
        },
        Event {
            kind: Scalar,
            encoding: Some(
                BasicString,
            ),
            span: 14..21,
        },
        Event {
            kind: Newline,
            encoding: None,
            span: 21..22,
        },
    ],
    errors: [
        ParseError {
            context: 6..7,
            description: "invalid table",
            expected: [
                Description(
                    "key",
                ),
            ],
            unexpected: 6..6,
        },
        ParseError {
            context: 2..2,
            description: "empty unquoted key",
            expected: [
                Description(
                    "letters",
                ),
                Description(
                    "numbers",
                ),
                Literal(
                    "-",
                ),
                Literal(
                    "_",
                ),
            ],
            unexpected: 2..2,
        },
        ParseError {
            context: 4..4,
            description: "empty unquoted key",
            expected: [
                Description(
                    "letters",
                ),
                Description(
                    "numbers",
                ),
                Literal(
                    "-",
                ),
                Literal(
                    "_",
                ),
            ],
            unexpected: 4..4,
        },
    ],
}
