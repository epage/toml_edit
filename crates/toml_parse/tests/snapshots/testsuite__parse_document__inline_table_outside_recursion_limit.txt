EventResults {
    input: "\nkey = { a = { b = { c = { d = 1 } } } }\nafter = [10]\n",
    events: [
        Event {
            kind: Newline,
            encoding: None,
            span: 0..1,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 1..4,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 4..5,
        },
        Event {
            kind: KeyValSep,
            encoding: None,
            span: 5..6,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 6..7,
        },
        Event {
            kind: InlineTableOpen,
            encoding: None,
            span: 7..8,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 8..9,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 9..10,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 10..11,
        },
        Event {
            kind: KeyValSep,
            encoding: None,
            span: 11..12,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 12..13,
        },
        Event {
            kind: InlineTableOpen,
            encoding: None,
            span: 13..14,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 14..15,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 15..16,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 16..17,
        },
        Event {
            kind: KeyValSep,
            encoding: None,
            span: 17..18,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 18..19,
        },
        Event {
            kind: InlineTableOpen,
            encoding: None,
            span: 19..20,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 20..21,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 21..22,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 22..23,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 23..24,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 24..25,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 25..26,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 26..27,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 27..28,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 28..29,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 29..30,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 30..31,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 31..32,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 32..33,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 33..34,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 34..35,
        },
        Event {
            kind: InlineTableClose,
            encoding: None,
            span: 35..36,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 36..37,
        },
        Event {
            kind: InlineTableClose,
            encoding: None,
            span: 37..38,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 38..39,
        },
        Event {
            kind: InlineTableClose,
            encoding: None,
            span: 39..40,
        },
        Event {
            kind: Newline,
            encoding: None,
            span: 40..41,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 41..46,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 46..47,
        },
        Event {
            kind: KeyValSep,
            encoding: None,
            span: 47..48,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 48..49,
        },
        Event {
            kind: ArrayOpen,
            encoding: None,
            span: 49..50,
        },
        Event {
            kind: Scalar,
            encoding: None,
            span: 50..52,
        },
        Event {
            kind: ArrayClose,
            encoding: None,
            span: 52..53,
        },
        Event {
            kind: Newline,
            encoding: None,
            span: 53..54,
        },
    ],
    errors: [
        ParseError {
            context: None,
            description: "cannot recurse further; max recursion depth met",
            expected: None,
            unexpected: Some(
                19..20,
            ),
        },
    ],
}
