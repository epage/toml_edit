EventResults {
    input: "[ . ]\nkey = \"value\"\n",
    events: [
        Event {
            kind: StdTableOpen,
            encoding: None,
            span: 0..1,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 1..2,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 2..2,
        },
        Event {
            kind: KeySep,
            encoding: None,
            span: 2..3,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 3..4,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 4..5,
        },
        Event {
            kind: Newline,
            encoding: None,
            span: 5..6,
        },
        Event {
            kind: SimpleKey,
            encoding: None,
            span: 6..9,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 9..10,
        },
        Event {
            kind: KeyValSep,
            encoding: None,
            span: 10..11,
        },
        Event {
            kind: Whitespace,
            encoding: None,
            span: 11..12,
        },
        Event {
            kind: Scalar,
            encoding: Some(
                BasicString,
            ),
            span: 12..19,
        },
        Event {
            kind: Newline,
            encoding: None,
            span: 19..20,
        },
    ],
    errors: [
        ParseError {
            context: 4..5,
            description: "invalid table",
            expected: [
                Description(
                    "key",
                ),
            ],
            unexpected: 4..4,
        },
        ParseError {
            context: 2..2,
            description: "empty unquoted key",
            expected: [
                Description(
                    "letters",
                ),
                Description(
                    "numbers",
                ),
                Literal(
                    "-",
                ),
                Literal(
                    "_",
                ),
            ],
            unexpected: 2..2,
        },
    ],
}
